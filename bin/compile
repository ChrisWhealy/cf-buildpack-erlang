#!/bin/bash

##
# usage: bin/compile <build-dir> <cache-dir> <env-dir>

join_by() { 
  local IFS="$1"; shift; echo "$*"; 
}

export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

set -e

echo "$0"
echo "$1"
echo "$2"

home_dir=$(cd $(dirname $(dirname $0)); pwd)
mkdir -p "$1" "$2"

build_dir=$(cd "$1/" && pwd)
test -z ${build_dir} && exit

cache_dir=$(cd "$2/" && pwd)
test -z ${cache_dir} && exit

if [ -f ${build_dir}/.env-export ]; then
  echo "Export config variables to build environment"
  envs=$(join_by "|" $(cat ${build_dir}/.env-export | xargs))
  envs="^($envs)$"
  export_env_dir $3 $envs
fi

DEFAULT_OTP_VERSION="20.1"

if [ -f ${build_dir}/.preferred_otp_version ]; then
  OTP_VERSION=$(cat ${build_dir}/.preferred_otp_version)
fi

ver=${OTP_VERSION:=${DEFAULT_OTP_VERSION}}
tarball=OTP-${ver}.tar.gz
OTP_TARBALL_URL="https://s3.amazonaws.com/heroku-buildpack-elixir/erlang/cedar-14/${tarball}"

DEFAULT_REBAR_VERSION="3.6.2"

if [ -f ${build_dir}/.preferred_rebar3_version ]; then
  REBAR_VERSION=$(cat ${build_dir}/.preferred_rebar3_version)
fi
rebar_ver=${REBAR_VERSION:=${DEFAULT_REBAR_VERSION}}
REBAR_BIN_URL="https://github.com/erlang/rebar3/releases/download/${rebar_ver}/rebar3"


ERLROOT=${build_dir}/otp
PROFILE=${build_dir}/.profile.d

echo "-----> Build environment"
echo "Home directory = ${home_dir}"
echo "Build directory = ${build_dir}"
echo "Erlang root = ${ERLROOT}"
echo "Cache directory = ${cache_dir}"
echo "Erlang OTP version = ${ver}"
echo "Precompiled OTP binary URL = ${OTP_TARBALL_URL}"
echo "Precompiled Rebar3 binary URL = ${REBAR_BIN_URL}"

echo "-----> Using Erlang/OTP $ver"

(
    set -e

    # Already cached?
    test -f ${cache_dir}/${tarball} && exit

    # No, so rebuild the cache directory
    rm -rf ${cache_dir}/*
    cd ${cache_dir}

    echo "-------> Fetching Erlang/OTP $ver from ${OTP_TARBALL_URL}"
    curl -sO ${OTP_TARBALL_URL} || exit 1
)

echo "-------> Unpacking Erlang/OTP ${cache_dir}/${tarball}"
mkdir -p ${ERLROOT}
tar zxf ${cache_dir}/${tarball} -C ${ERLROOT} --strip-components=1

echo "-------> Installing Erlang/OTP $ver"
ln -s ${ERLROOT} /app/otp
${ERLROOT}/Install -minimal /app/otp

PATH=/app/otp/bin:$PATH
export PATH

cd $build_dir
echo $(pwd)
echo $(ls)

# Does rebar3 already exist?
if [ ! -e "rebar3" ]; then
  echo "-----> Download Rebar from GitHub"
  curl -L -o rebar3 $REBAR_BIN_URL
  chmod +x rebar3
fi

echo "-----> Building with Rebar3"
unset GIT_DIR
./rebar3 release 2>&1 | sed -u 's/^/       /'

if [ ${PIPESTATUS[0]} -ne 0 ]; then
  echo "-----> Build failed"
  exit 1
fi

if [ -f ${home_dir}/opt/otp.sh ]; then
  mkdir -p ${PROFILE}
  cp ${home_dir}/opt/otp.sh ${PROFILE}
fi

echo "-----> Build succeeded"
